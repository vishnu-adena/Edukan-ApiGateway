# Server Configuration
server.port=${SERVER_PORT:8762}

# Eureka Client Configuration
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_URL:http://localhost:8761/eureka}

# Spring Cloud Gateway Configuration
spring.application.name=${APPLICATION_NAME:api-gateway}
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Route Configurations
#spring.cloud.gateway.routes[0].id=userservice
#spring.cloud.gateway.routes[0].uri=lb://userservice
#spring.cloud.gateway.routes[0].predicates[0]=Path=/userservice/**
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/userservice/(?<segment>.*), /${segment}

# Global CORS Configuration (optional, uncomment if needed)
# spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
# spring.cloud.gateway.globalcors.cors-configurations[/**].allowedOrigins=${ALLOWED_ORIGINS:*}
# spring.cloud.gateway.globalcors.cors-configurations[/**].allowedHeaders=*
# spring.cloud.gateway.globalcors.cors-configurations[/**].allowedMethods=GET,POST,PUT,DELETE,PATCH

# Actuator Configuration
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=*

# Additional Configurations (Optional)
# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG

# Security Configuration (Optional, if security is enabled)
# spring.security.oauth2.client.provider.eureka-client-authorization-uri=http://localhost:8761/eureka
# spring.security.oauth2.client.registration.eureka-client.client-id=eureka-client-id
# spring.security.oauth2.client.registration.eureka-client.client-secret=eureka-client-secret

# Custom Properties (if any)
# custom.property.example=value
